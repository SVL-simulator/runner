image: docker:git
stages:
    - build
    - test
    - publish
    - make_bundle

variables:
  GIT_SUBMODULE_STRATEGY: normal
  TESTENV_IMAGE: "${CI_REGISTRY_IMAGE}/testenv:${CI_PIPELINE_ID}"

before_script:
  - which docker && test -n "${CI_BUILD_TOKEN}" && docker login -u ${CI_REGISTRY_USER} -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
  - export GIT_PRETTY_REF=`git describe --always --tag`

build-image-latest:
    stage: build
    script:
        - ./ci/update-docker-image-ref.sh scripts/scenic_lgsvl.sh ${CI_REGISTRY_IMAGE}:latest
        - docker build -f docker/Dockerfile -t ${CI_REGISTRY_IMAGE}:latest --label build_ref=${GIT_PRETTY_REF} .
        - docker push ${CI_REGISTRY_IMAGE}:latest
    only:
        - master
        - ci-master
    tags:
        - docker

build-image-branch:
    stage: build
    script:
        - ./ci/update-docker-image-ref.sh scripts/scenic_lgsvl.sh ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}:latest
        - docker build -f docker/Dockerfile -t ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}:latest --label build_ref=${GIT_PRETTY_REF} .
        - docker push ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}:latest
    only:
        - branches
    except:
        - master
        - ci-master
    tags:
        - docker

build-image-tag:
    stage: build
    script:
        - ./ci/update-docker-image-ref.sh scripts/scenic_lgsvl.sh ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
        - docker build -f docker/Dockerfile -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG} --label build_ref=${GIT_PRETTY_REF} .
        - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
    only:
        - tags
    tags:
        - docker

build-test-image:
    stage: build
    script:
        - docker build -f docker/Dockerfile -t ${CI_REGISTRY_IMAGE}/base .
        - docker build -f docker/Dockerfile.devenv -t ${TESTENV_IMAGE} --build-arg BASE_IMAGE=${CI_REGISTRY_IMAGE}/base .
        - docker push ${TESTENV_IMAGE}
    tags:
        - docker

pytest:
    stage: test
    image: ${TESTENV_IMAGE}
    script:
        - pytest -s -v runner/tests
    tags:
        - docker

make_bundle_latest:
    image: docker:git
    stage: make_bundle
    script:
        - apk --no-cach add bash zip tree
        - ./ci/make_release_bundle.sh latest
        - mv dist/*.zip .
    artifacts:
        name: "$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID"
        paths:
            - "*.zip"
        expire_in: 1 week
    only:
        - master
        - ci-master
    tags:
        - docker

make_bundle_tag:
    image: docker:git
    stage: make_bundle
    script:
        - apk --no-cach add bash zip tree
        - ./ci/make_release_bundle.sh ${CI_COMMIT_TAG}
        - mv dist/*.zip .
    artifacts:
        name: "$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID"
        paths:
            - "*.zip"
        expire_in: 1 week
    only:
        - tags
    tags:
        - docker
